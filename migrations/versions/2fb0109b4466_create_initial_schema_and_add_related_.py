"""Create initial schema and add related data

Revision ID: 2fb0109b4466
Revises: 
Create Date: 2024-07-06 18:34:11.944019

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import table, column
from werkzeug.security import generate_password_hash

# revision identifiers, used by Alembic.
revision = '2fb0109b4466'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'officer',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=50), nullable=False),
        sa.Column('email', sa.String(length=120), nullable=False),
        sa.Column('password', sa.String(length=200), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email')
    )
    op.create_table(
        'person',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=50), nullable=False),
        sa.Column('email', sa.String(length=120), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email')
    )
    op.create_table(
        'infraction',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('license_plate', sa.String(length=10), nullable=False),
        sa.Column('timestamp', sa.DateTime(), nullable=False),
        sa.Column('comments', sa.String(length=200), nullable=False),
        sa.Column('officer_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['officer_id'], ['officer.id']),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table(
        'vehicle',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('license_plate', sa.String(length=10), nullable=False),
        sa.Column('brand', sa.String(length=50), nullable=False),
        sa.Column('color', sa.String(length=50), nullable=False),
        sa.Column('owner_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['owner_id'], ['person.id']),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('license_plate')
    )
    # Insert initial data
    op.bulk_insert(
        table(
            'person',
            column('id', sa.Integer),
            column('name', sa.String),
            column('email', sa.String)
        ),
        [
            {'id': 1, 'name': 'John Doe', 'email': 'john.doe@example.com'}
        ]
    )

    op.bulk_insert(
        table(
            'vehicle',
            column('id', sa.Integer),
            column('license_plate', sa.String),
            column('brand', sa.String),
            column('color', sa.String),
            column('owner_id', sa.Integer)
        ),
        [
            {'id': 1, 'license_plate': 'ABC123', 'brand': 'Toyota', 'color': 'Red', 'owner_id': 1}
        ]
    )

    op.bulk_insert(
        table(
            'officer',
            column('id', sa.Integer),
            column('name', sa.String),
            column('email', sa.String),
            column('password', sa.String)
        ),
        [
            {'id': 1, 'name': 'Jane Smith', 'email': 'jane.smith@example.com', 'password': generate_password_hash('password123')}
        ]
    )
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('vehicle')
    op.drop_table('infraction')
    op.drop_table('person')
    op.drop_table('officer')
    # ### end Alembic commands ###
